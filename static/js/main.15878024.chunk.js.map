{"version":3,"sources":["App.js","components/equalButton.jsx","components/previewBar.jsx","components/resultBar.jsx","components/number.jsx","components/numbers.jsx","components/operator.jsx","components/operators.jsx","components/delete.jsx","components/deletes.jsx","reportWebVitals.js","index.js"],"names":["App","state","nums","id","value","ops","dels","text","storedValue","currentOp","handleNumber","num","indexOf","setState","handleOperator","op","curText","eval","handleDelete","del","toString","slice","handleEqual","total","Fragment","this","operator","className","style","paddingLeft","onHandleNumber","onHandleOperator","onHandleDelete","onHandleEqual","Component","equalButton","props","paddingRight","onClick","PreviewBar","fontSize","resultBar","Number","Numbers","map","Operator","Operators","Delete","Deletes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15878024.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport ResultBar from \"./components/resultBar\";\nimport Numbers from \"./components/numbers\";\nimport Operators from \"./components/operators\";\nimport Equal from \"./components/equalButton\";\nimport Deletes from \"./components/deletes\";\n\n\nclass App extends Component {\n  state = {\n    nums: [\n      { id: 1, value: \"1\" },\n      { id: 2, value: \"2\" },\n      { id: 3, value: \"3\" },\n      { id: 4, value: \"4\" },\n      { id: 5, value: \"5\" },\n      { id: 6, value: \"6\" },\n      { id: 7, value: \"7\" },\n      { id: 8, value: \"8\" },\n      { id: 9, value: \"9\" },\n      { id: 0, value: \"0\" },\n      {id: 10, value: \".\"},\n    ],\n\n    ops: [\n      { id: 1, value: \"+\" },\n      { id: 2, value: \"-\" },\n      { id: 3, value: \"x\" },\n      { id: 4, value: \"/\" },\n    ],\n\n    dels: [\n      { id: 1, value: \"CE\" },\n      { id: 2, value: \"C\" },\n      { id: 3, value: \"<--\" },\n    ],\n\n    text: \"\",\n    storedValue: \"\",\n    currentOp: null,\n  };\n\n  handleNumber = (num) => {\n    if(num == \".\" && this.state.text.indexOf(\".\") != -1){\n      num = \"\";\n    }\n    const text = this.state.text + num;\n    this.setState({ text });\n  };\n\n  handleOperator = (op) => {\n    const currentOp = op;\n    const curText = this.state.text;\n\n    if (this.state.storedValue == \"\") {\n      this.setState({ currentOp, storedValue: curText, text: \"\" });\n    } else if (this.state.text != \"\") {\n      const storedValue = eval(\n        this.state.storedValue + this.state.currentOp + this.state.text\n      );\n      this.setState({ currentOp, storedValue, text: \"\" });\n    }\n  };\n\n  handleDelete = (del) =>{ \n    let text;\n    let storedValue = this.state.storedValue;\n    switch (del.id) {\n      case 1:\n        text = \"\";\n        break;\n      case 2:\n        text = \"\";\n        storedValue = \"\";\n        break\n      case 3:\n        text = this.state.text.toString().slice(0, -1);\n        break;      \n    }\n    this.setState({text, storedValue});  \n  }\n\n  handleEqual = () => {\n    if(this.state.storedValue != \"\" && this.state.text != \"\") {\n      const total = eval(\n        this.state.storedValue + this.state.currentOp + this.state.text\n      );\n      this.setState({ storedValue: \"\", currentOp: null, text: total });\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <ResultBar\n          text={this.state.text}\n          operator={this.state.currentOp}\n          storedValue={this.state.storedValue}\n        />\n        <div className=\"container\" style={{ paddingLeft: 20 }}>\n          <Numbers nums={this.state.nums} onHandleNumber={this.handleNumber} />\n          <Operators\n            ops={this.state.ops}\n            onHandleOperator={this.handleOperator}\n          />\n          <Deletes dels={this.state.dels} onHandleDelete={this.handleDelete}/>\n          <Equal\n            onHandleEqual={this.handleEqual}\n            storedValue={this.state.storedValue}\n            currentOp={this.state.currentOp}\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\r\n\r\nconst equalButton = (props) => {\r\n    return (\r\n        <button\r\n        className=\"btn btn-outline-primary btn-lg m-1\"\r\n        style={{paddingRight:20, paddingLeft:20}}\r\n        onClick={props.onHandleEqual}\r\n      >\r\n      =\r\n      </button>\r\n    );\r\n}\r\n \r\nexport default equalButton;","import React, { Component } from \"react\";\r\n\r\nclass PreviewBar extends Component {\r\n  render() {\r\n    return (\r\n      <span className=\"border border-success m-2 rounded\" style={{ fontSize: 20 }}>\r\n        {this.props.storedValue}\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PreviewBar;\r\n","import React, { Component } from \"react\";\r\nimport PreviewBar from \"./previewBar\";\r\n\r\nclass resultBar extends Component {\r\n  //if nothing in there, color grey\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <span\r\n          className=\"badge badge-success ml-2 mt-1\"\r\n          style={{ fontSize: 20 }}\r\n        >\r\n          {this.props.operator}\r\n        </span>\r\n        <PreviewBar storedValue={this.props.storedValue}/>\r\n        <nav className=\"navbar navbar-dark bg-dark m-2\">\r\n          <span className=\"navbar-brand mb-0 h1\">{this.props.text}</span>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default resultBar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Number extends Component {\r\n  render() {\r\n    return (\r\n      <button\r\n        className=\"btn btn-outline-dark btn-lg m-1\"\r\n        onClick={() => this.props.onHandleNumber(this.props.num.value)}\r\n      >\r\n        {this.props.num.value}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Number;\r\n","import React, { Component } from \"react\";\r\nimport Number from \"./number\";\r\n\r\nclass Numbers extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.nums.map((num) => (\r\n          <Number\r\n            key={num.id}\r\n            num={num}\r\n            onHandleNumber={this.props.onHandleNumber}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Numbers;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Operator extends Component {\r\n  render() {\r\n    return (\r\n      <button\r\n        className=\"btn btn-outline-success btn-lg m-1\"\r\n        style={{paddingRight:20, paddingLeft:20}}\r\n        onClick={() => this.props.onHandleOperator(this.props.op.value)}\r\n      >\r\n        {this.props.op.value}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Operator;\r\n","import React, { Component } from \"react\";\r\nimport Operator from \"./operator\";\r\n\r\nclass Operators extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.ops.map((op) => (\r\n          <Operator key={op.id} op={op} onHandleOperator={this.props.onHandleOperator} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Operators;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Delete extends Component {\r\n  render() {\r\n    return (\r\n      <button\r\n        className=\"btn btn-outline-danger btn-lg m-1\"\r\n        style={{ paddingRight: 20, paddingLeft: 20 }}\r\n        onClick={() => this.props.onHandleDelete(this.props.del)}\r\n      >\r\n        {this.props.del.value}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Delete;\r\n","import React, { Component } from \"react\";\r\nimport Delete from \"./delete\";\r\n\r\nclass Deletes extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.dels.map(del => (\r\n          <Delete\r\n            key={del.id}\r\n            del={del}\r\n            onHandleDelete={this.props.onHandleDelete}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Deletes;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}